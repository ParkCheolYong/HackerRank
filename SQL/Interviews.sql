SELECT A.CONTEST_ID
     , A.HACKER_ID
     , A.NAME
     , SUM(E.TOTAL_SUBMISSIONS)          AS TOTAL_SUBMISSIONS
     , SUM(E.TOTAL_ACCEPTED_SUBMISSIONS) AS TOTAL_ACCEPTED_SUBMISSIONS
     , SUM(D.TOTAL_VIEWS)                AS TOTAL_VIEWS
     , SUM(D.TOTAL_UNIQUE_VIEWS)         AS TOTAL_UNIQUE_VIEWS
  FROM CONTESTS A
       INNER JOIN COLLEGES B                   ON B.CONTEST_ID = A.CONTEST_ID
       INNER JOIN CHALLENGES C                 ON C.COLLEGE_ID = B.COLLEGE_ID
       LEFT OUTER JOIN (SELECT CHALLENGE_ID
                             , SUM(TOTAL_VIEWS)        AS TOTAL_VIEWS
                             , SUM(TOTAL_UNIQUE_VIEWS) AS TOTAL_UNIQUE_VIEWS
                          FROM VIEW_STATS
                         GROUP BY
                               CHALLENGE_ID) D ON D.CHALLENGE_ID = C.CHALLENGE_ID
       LEFT OUTER JOIN (SELECT CHALLENGE_ID
                             , SUM(TOTAL_SUBMISSIONS)          AS TOTAL_SUBMISSIONS
                             , SUM(TOTAL_ACCEPTED_SUBMISSIONS) AS TOTAL_ACCEPTED_SUBMISSIONS
                          FROM SUBMISSION_STATS
                         GROUP BY
                               CHALLENGE_ID) E ON E.CHALLENGE_ID = C.CHALLENGE_ID
 GROUP BY 
       A.CONTEST_ID
     , A.HACKER_ID
     , A.NAME
HAVING SUM(E.TOTAL_SUBMISSIONS) > 0
   AND SUM(E.TOTAL_ACCEPTED_SUBMISSIONS) > 0
   AND SUM(D.TOTAL_VIEWS) > 0
   AND SUM(D.TOTAL_UNIQUE_VIEWS) > 0
 ORDER BY
       A.CONTEST_ID;